# -*- ruby -*-

module Nokogiri
  module LibXML

    module XmlDocumentMixin
      def self.included(base)
        base.class_eval do
          @@@
          struct do |s|
            s.name "struct _xmlDoc"
            s.include "libxml/tree.h"
            s.field :_private, :int
            s.field :type, :int
            s.field :name, :string
            s.field :children, :pointer
            s.field :last, :pointer
            s.field :parent, :pointer
            s.field :next, :pointer
            s.field :prev, :pointer
            s.field :doc, :pointer
            s.field :intSubset, :pointer
          end
          @@@
        end
      end

      def private=(object)
        self[:_private] = object.object_id
      end

      def private
        ObjectSpace._id2ref(self[:_private])
      end

      def document
        p = self[:doc]
        p.null? ? nil : LibXML::XmlDocumentCast.new(p)
      end
    end

    class XmlDocument < CrossFFI::Struct
      include XmlDocumentMixin

      def self.release ptr
        LibXML.xmlFreeDoc(ptr)
      end
    end

    class XmlDocumentCast < FFI::Struct
      include XmlDocumentMixin
    end

    HtmlDocument = XmlDocument # implemented identically in libxml2.6
    HtmlDocumentCast = XmlDocumentCast # implemented identically in libxml2.6
  end

end    
